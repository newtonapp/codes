what is ETCD

ETCD port 2379

ETCD store information like:
(every cmd u run with kubctl it gets info from ETCD cluster
- Nodes
- PODs
- Configs
- Secrets
- Accounts
- Roles
- Bindings
- Others


$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

systemctl enable --now 
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

#kubeadm init  --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=192.168.0.9

#kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

#kubectl get pods --all-namespaces

**************************************************
[root@localhost ~]# kubectl get pods --all-namespaces
NAMESPACE     NAME                                            READY   STATUS              RESTARTS   AGE
default       nginx                                           0/1     ContainerCreating   0          80s
kube-system   etcd-localhost.localdomain                      1/1     Running             8          12m
kube-system   kube-apiserver-localhost.localdomain            1/1     Running             8          12m
kube-system   kube-controller-manager-localhost.localdomain   1/1     Running             8          12m
kube-system   kube-flannel-ds-amd64-6mr2z                     1/1     Running             3          3m4s
kube-system   kube-scheduler-localhost.localdomain            1/1     Running             1          12m
[root@localhost ~]#
**************************************************

To do this in the latest version (tested on 1.10.0) you can issue following command on the masternode:

#kubeadm token list
#
#kubeadm token create --print-join-command

It will then print out a new join command 

#kubeadm join 192.168.1.101:6443 --token tokentoken.lalalalaqyd3kavez --discovery-token-ca-cert-hash sha256:complexshaoverhere

join error:

cat <<EOF >  /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system


kubectl run nginx --image=nginx --port=80 --restart=Never

kubectl get pods
kubectl 

kubectl get pods -o wide
kubectl get pods --all-namespaces -o wide
kubectl logs --namespace kube-system kube-flannel-ds-amd64-5fx2p

******************
if swap is on worknodes may go not ready state
****************



